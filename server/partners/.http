# Global file variable definitions
@hostname = http://localhost
@port = 3001
@host = {{hostname}}:{{port}}
@firebaseAuthApiKey = AIzaSyA6WspXWorAK_1HiwLAVht7-ujoUDdWsAs
@authToken = Bearer {{getAuth.response.body.idToken}}
@authHeader = Authorization: {{authToken}}

### Create api_tester account if none
# @name signUp
POST https://identitytoolkit.googleapis.com/v1/accounts:signUp?key={{firebaseAuthApiKey}}
content-type: application/json

{
    "email": "api_tester@enkeldigital.com",
    "password": "securePassword",
    "returnSecureToken": true,
}


### Get auth credentials
# @name getAuth
POST https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={{firebaseAuthApiKey}}
content-type: application/json

{
    "email": "api_tester@enkeldigital.com",
    "password": "securePassword",
    "returnSecureToken": true,
}

### ping
GET {{host}}/

### Health probe
GET {{host}}/health

### Get user
# GET /user/:userEmail
GET {{host}}/user/jj@enkeldigital.com
{{authHeader}}

### Get class
# GET /class/details/:classID
GET {{host}}/class/details/1

### Get class of partner
# GET /class/of/:partnerID
GET {{host}}/class/of/1
{{authHeader}}

### Favourite count of class
# GET /favourites/class/:classID
GET {{host}}/favourites/class/2
{{authHeader}}

### Favourite count of partner
# GET /favourites/partner/:partnerID
GET {{host}}/favourites/partner/1
{{authHeader}}

### Favourite count of all classes from a partner
# GET /favourites/all-classes/of/:partnerID
GET {{host}}/favourites/all-classes/of/1
{{authHeader}}

### Get pending points
# GET /points/pending/:partnerID
GET {{host}}/points/pending/3
{{authHeader}}

### Get earned points
# GET /points/valid/:partnerID
GET {{host}}/points/valid/3
{{authHeader}}

### Get all points earned from class
# GET /points/class/:classID
GET {{host}}/points/class/:classID
{{authHeader}}

### Get all tags of a class
# GET /tags/class/:classID
GET {{host}}/tags/class/1

### Add more tags for a class
POST {{host}}/tags/class/new
{{authHeader}}
content-type: application/json

{
    "classID": 1,
    "tags": ["test", "test2"]
}

### Get all employees
# GET /employees/all/:partnerID
GET {{host}}/employees/all/1
{{authHeader}}

### Create new employee
POST {{host}}/employees/new
{{authHeader}}
content-type: application/json

{
    "employee": {
        "partnerID": 1,
        "name": "Kong Wei",
        "email": "kongwei@gmail.com",
        "phoneNumber": "+6512345678"
    }
}

### Update employee details
# PATCH /employees/:employeeID
PATCH {{host}}/employees/3
{{authHeader}}
content-type: application/json

{
    "employee": {
        "verified_email": true
    }
}

### Get individual employee details
# GET /employees/:employeeID
GET {{host}}/employees/3
{{authHeader}}

### Delete employee account
# DELETE /employees/:employeeID
DELETE {{host}}/employees/3
{{authHeader}}

### Delete partner account
# DELETE /partner/:partnerID
DELETE {{host}}/partner/1
{{authHeader}}

### Update partner details
# PATCH /partner/:partnerID
PATCH {{host}}/partner/1
{{authHeader}}