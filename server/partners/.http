# Global file variable definitions
@hostname = http://localhost
@port = 3001
@host = {{hostname}}:{{port}}
@firebaseAuthApiKey = AIzaSyA6WspXWorAK_1HiwLAVht7-ujoUDdWsAs

### Create api_tester account if none
# @name signUp
POST https://identitytoolkit.googleapis.com/v1/accounts:signUp?key={{firebaseAuthApiKey}}
content-type: application/json

{
    "email": "api_tester@enkeldigital.com",
    "password": "securePassword",
    "returnSecureToken": true,
}


### Get auth credentials
# @name getAuth
POST https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={{firebaseAuthApiKey}}
content-type: application/json

{
    "email": "api_tester@enkeldigital.com",
    "password": "securePassword",
    "returnSecureToken": true,
}

### ping
GET {{host}}/

### Health probe
GET {{host}}/health

### Get user
GET {{host}}/user/jj@enkeldigital.com
Authorization: Bearer {{getAuth.response.body.idToken}}

### Get class
GET {{host}}/class/details/1

### Get class of partner
GET {{host}}/class/of/1
Authorization: Bearer {{getAuth.response.body.idToken}}

### Favourite count of class
GET {{host}}/favourites/class/2
Authorization: Bearer {{getAuth.response.body.idToken}}

### Favourite count of partner
GET {{host}}/favourites/partner/1
Authorization: Bearer {{getAuth.response.body.idToken}}

### Favourite count of all classes from a partner
GET {{host}}/favourites/all-classes/of/1
Authorization: Bearer {{getAuth.response.body.idToken}}

### Get pending points
GET {{host}}/points/pending/3
Authorization: Bearer {{getAuth.response.body.idToken}}

### Get earned points
# GET /points/valid/:partnerID
GET {{host}}/points/valid/3
Authorization: Bearer {{getAuth.response.body.idToken}}

### Get all points earned from class
GET {{host}}/points/class/:classID
Authorization: Bearer {{getAuth.response.body.idToken}}

### Get all tags of a class
# GET /tags/class/:classID
GET {{host}}/tags/class/1

### Add more tags for a class
POST {{host}}/tags/class/new
Authorization: Bearer {{getAuth.response.body.idToken}}
content-type: application/json

{
    "classID": 1,
    "tags": ["test", "test2"]
}

### Get all employees
GET {{host}}/employees/all/:partnerID
Authorization: Bearer {{getAuth.response.body.idToken}}

### Create new employee
POST {{host}}/employees/new
Authorization: Bearer {{getAuth.response.body.idToken}}
content-type: application/json

{
    "employee": {
        "partnerID": 1,
        "name": "Kong Wei",
        "email": "kongwei@gmail.com",
        "phoneNumber": "+6512345678"
    }
}

### Update employee details
PATCH {{host}}/employees/:employeeID
Authorization: Bearer {{getAuth.response.body.idToken}}
content-type: application/json

{
    "employee": {
        "verified_email": true
    }
}

### Get individual employee details
GET {{host}}/employees/:employeeID
Authorization: Bearer {{getAuth.response.body.idToken}}

### Delete employee account
DELETE {{host}}/employees/:employeeID
Authorization: Bearer {{getAuth.response.body.idToken}}

### Delete partner account
DELETE {{host}}/partner/:partnerID
Authorization: Bearer {{getAuth.response.body.idToken}}

### Update partner details
DELETE {{host}}/partner/:partnerID
Authorization: Bearer {{getAuth.response.body.idToken}}